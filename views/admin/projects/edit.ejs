<%- include ('../../partials/header') %>
<%- include ('../../partials/admin-navbar') %>
<link rel="stylesheet" href="/static/css/projectCss.css">

  <main class="app">
    
    <div class="header">
      <h2>Inserir Novas Imagens do Projeto</h2>
      <div class="server-message"></div>
    </div>

    <div class="input-div">
      <p>Fa√ßa <span class="browse">Upload</span> das imagens do projeto aqui</p>
      <input type="file" class="file" multiple="multiple" accept="image/jpeg, image/png, image/jpg"/>
    </div>

    <form id="saved-form">
      <div class="header">
        <h3>Imagens do Projeto</h3>
        <button type="submit">Delete</button>
      </div>
      <div class="saved-div"></div>
    </form>

    <form id="queued-form">
      <div class="header">
        <h3>Queued in Frontend</h3>
        <button type="submit">Upload</button>
      </div>
      <div class="queued-div"></div>
    </form>

      <div class="header">
          <h2>Editar Projeto</h2>
      </div>

      <form method="POST" action="/projects/update">
          <input type="hidden" value="<% project.id %>" name="id">
          <input class="form-control" type="text" name="title" value="<%- project.title %>"><br>
          <textarea class="form-control" name="body" id="project" placeholder="Escreva o projeto aqui" cols="30" rows="10"><%- project.body %></textarea><br>
          <label">Categoria</label>
          <select name="category" class="form-control">
              <% categories.forEach((category) => { %>
                  <% if(category.id == project.categoryId) { %>
                      <option value="<%= category.id %>" selected><%= category.title %></option>
                  <% } else { %>
                      <option value="<%= category.id %>"><%= category.title %></option>
                  <% } %>
              <% }); %>
          </select><br>
          <button class="btn btn-success">Atualizar</button>
      </form>

  </main>

  <%- include ('../../partials/admin-footer') %>

  <!-- TINYMCE -->
  <script src="/static/tinymce/tinymce.min.js"></script>
  <script>
      tinymce.init({
          language: 'pt_BR',
          selector: "#project",
          plugins: 'advlist autolink link image lists preview searchreplace wordcount fullscreen insertdatetime media save table emoticons'
      });
  </script>

  <script>

    let queuedImagesArray = [],
    savedForm = document.querySelector("#saved-form"),
    queuedForm = document.querySelector("#queued-form"),
    savedDiv = document.querySelector('.saved-div'),
    queuedDiv = document.querySelector('.queued-div'),
    inputDiv = document.querySelector('.input-div'),
    input = document.querySelector('.input-div input'),
    serverMessage = document.querySelector('.server-message'),
    savedImages = JSON.parse('<%-JSON.stringify(images)%>'),
    deleteImages = [];

    // SAVED IMAGES
    if(savedImages) displaySavedImages()

    function displaySavedImages(){
      let images = "";
        savedImages.forEach((image, index) => {
          images += `<div class="image">
                      <img src="http://localhost:3000/uploads/${image}" alt="image">
                      <span onclick="deleteSavedImage(${index})">&times;</span>
                    </div>`;
        })
      savedDiv.innerHTML = images;
    }

    function deleteSavedImage(index) {
      deleteImages.push(savedImages[index])
      savedImages.splice(index, 1);
      displaySavedImages();
    }

    savedForm.addEventListener("submit", (e) => {
      e.preventDefault()
      deleteImagesFromServer()
    });

    function deleteImagesFromServer() {

      fetch("delete", {
        method: "PUT",
        headers: {
          "Accept": "application/json, text/plain, */*",
          "Content-type": "application/json"
        },
        body: JSON.stringify({deleteImages})
      })

      .then(response => {
        if (response.status !== 200) throw Error(response.statusText)
        deleteImages = []
        serverMessage.innerHTML = response.statusText
        serverMessage.style.cssText = "background-color: #d4edda; color:#1b5e20"
      })

      .catch(error => {
        serverMessage.innerHTML = error
        serverMessage.style.cssText = "background-color: #f8d7da; color:#b71c1c"
      });

    }

    // QUEUED IMAGES

    function displayQueuedImages() {
      let images = "";
      queuedImagesArray.forEach((image, index) => {
        images += `<div class="image">
                    <img src="${URL.createObjectURL(image)}" alt="image">
                    <span onclick="deleteQueuedImage(${index})">&times;</span>
                  </div>`;
      })
      queuedDiv.innerHTML = images;
    }

    function deleteQueuedImage(index) {
      queuedImagesArray.splice(index, 1);
      displayQueuedImages();
    }

    input.addEventListener("change", () => {
      const files = input.files;
      for (let i = 0; i < files.length; i++) {
        queuedImagesArray.push(files[i])
      }
      queuedForm.reset();
      displayQueuedImages()
    })

    inputDiv.addEventListener("drop", (e) => {
      e.preventDefault()
      const files = e.dataTransfer.files
      for (let i = 0; i < files.length; i++) {
        if (!files[i].type.match("image")) continue; // only photos
        
        if (queuedImagesArray.every(image => image.name !== files[i].name))
          queuedImagesArray.push(files[i])
      }
      displayQueuedImages()
    })

    queuedForm.addEventListener("submit", (e) => {
      e.preventDefault()
      sendQueuedImagesToServer()
    });

    function sendQueuedImagesToServer() {
      const formData = new FormData(queuedForm);

      queuedImagesArray.forEach((image, index) => {
        formData.append(`file[${index}]`, image)
      })

      fetch("upload", {
        method: "POST",
        body: formData
      })
        
      .then(response => {
        if(response.status !== 200) throw Error(response.statusText)
        location.reload() 
      })

      .catch( error => { 
        serverMessage.innerHTML = error
        serverMessage.style.cssText = "background-color: #f8d7da; color:#b71c1c"
      });

    }

  </script>
  
</body>
</html>
